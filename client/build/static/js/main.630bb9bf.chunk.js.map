{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","actions/profile.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/routing/PrivateRoute.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","classname","onClick","href","guestLinks","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","password2","alerts","alert","length","map","key","getCurrentProfile","statusText","status","createProfile","history","edit","push","src","spinner","style","width","margin","display","alt","DashboardActions","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","location","bio","githubusername","skills","youtube","facebook","twitter","instagram","linkedin","displaySocialInputs","toggleSocialInputs","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","class","checked","disabled","cols","rows","addEducation","fieldofstudy","Component","component","rest","render","props","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","deletePost","addLike","removeLike","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.630bb9bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.5572838d.gif\";","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout and clear profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n  dispatch({ type: CLEAR_PROFILE });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />{' '}\r\n          <span classname='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt' />{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login({ email, password });\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign In to Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            minLength='6'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get githubrepos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  // dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or Update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete exerience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experince Deleted', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Deleted', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Account and profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      await axios.delete('/api/profile');\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED,\r\n      });\r\n\r\n      dispatch(setAlert('Your account has been PERMANANTLY deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experince from './Experience';\r\nimport Education from './Education';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experince experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus'></i> Delete my Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    bio: '',\r\n    status: '',\r\n    githubusername: '',\r\n    skills: '',\r\n    youtube: '',\r\n    facebook: '',\r\n    twitter: '',\r\n    instagram: '',\r\n    linkedin: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedin,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    bio: '',\r\n    status: '',\r\n    githubusername: '',\r\n    skills: '',\r\n    youtube: '',\r\n    facebook: '',\r\n    twitter: '',\r\n    instagram: '',\r\n    linkedin: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills,\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedin,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link class='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add Your Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any relevant\r\n        developer/programming education that you have attended.\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Currently Attending\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link class='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check'></i> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div class='profile-top bg-primary p-2'>\r\n      <img class='round-img my-1' src={avatar} alt='' />\r\n      <h1 class='large'>{name}</h1>\r\n      <p class='lead'>\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div class='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-instagram fa-2x'></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div class='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 class='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div class='line'></div>\r\n      </Fragment>\r\n    )}\r\n    <h2 class='text-primary'>Skill Set</h2>\r\n    <div class='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check' /> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{company}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{school}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back to Developers\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  deletePost,\r\n  addLike,\r\n  removeLike,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div class='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class='my-1'>{text}</p>\r\n      <p class='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={(e) => addLike(_id)}\r\n            type='button'\r\n            class='btn btn-light'\r\n          >\r\n            <i class='fas fa-thumbs-up'></i>{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={(e) => removeLike(_id)}\r\n            type='button'\r\n            class='btn btn-light'\r\n          >\r\n            <i class='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} class='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span class='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={(e) => deletePost(_id)}\r\n              type='button'\r\n              class='btn btn-danger'\r\n            >\r\n              <i class='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// add likes\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// remove likes\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADD post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/posts', formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// ADD comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        class='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' class='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../actions/post';\r\n\r\nconst Post = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Post);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='bg-primary p'>\r\n        <h3>Leave a Comment...</h3>\r\n      </div>\r\n      <form\r\n        class='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a comment'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' class='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div class='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class='my-1'>{text}</p>\r\n      <p class='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={(e) => deleteComment(postId, _id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times'></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  connent: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back to Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  ADD_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/add-experience'\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path='/add-education'\n                component={AddEducation}\n              />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}